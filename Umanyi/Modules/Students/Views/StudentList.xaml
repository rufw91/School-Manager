<UserControl x:Class="UmanyiSMS.Modules.Students.Views.StudentList"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:Controls="clr-namespace:UmanyiSMS.Lib.Controls;assembly=UmanyiSMS.Lib"
             xmlns:commands="clr-namespace:UmanyiSMS.Presentation" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"       
      mc:Ignorable="d" Background="White"
             xmlns:views ="clr-namespace:UmanyiSMS.Modules.MySystem.Views"
      d:DesignHeight="548" d:DesignWidth="984">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" HorizontalAlignment="Left" Margin="20,10,0,0" Style="{DynamicResource Title}"  Text="Student List" VerticalAlignment="Top"/>
        <TextBox Style="{StaticResource SearchTextBox}" Grid.Row="0"  Name="txtTitle" HorizontalAlignment="Left" Height="23" Margin="230,26,0,0" 
                 Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Delay=10, Mode=OneWayToSource}" VerticalAlignment="Top" Width="400"/>
        <CheckBox Content="Show active only" HorizontalAlignment="Left" Margin="230,75,0,0" VerticalAlignment="Top"
                  IsChecked="{Binding ShowInactive}"/>
        <TextBlock Grid.Row="0"  HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" >
                <Hyperlink Command="{Binding RefreshCommand}">Refresh</Hyperlink>
        </TextBlock>
        <Controls:DropDownButton Content="Export" HorizontalAlignment="Left" Margin="20,75,0,0" VerticalAlignment="Top" DataContext="{Binding ElementName=lbx}">
            <Controls:DropDownButton.DropDownContent>
                <Menu>
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <MenuItem Header="Export to PDF" Command="{Binding Source={x:Static commands:CommonCommands.ExportToPDFCommand}}" CommandParameter="{Binding}"/>
                    <MenuItem Header="Export to Excel" Command="{Binding Source={x:Static commands:CommonCommands.ExportToExcelCommand}}" CommandParameter="{Binding}"/>
                </Menu>
            </Controls:DropDownButton.DropDownContent>
        </Controls:DropDownButton>
        <DataGrid Name="lbx" AutoGenerateColumns="False" VirtualizingStackPanel.IsVirtualizing="True" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto"
                 Margin="20,0,20,20"  IsReadOnly="True"
                 ItemsSource="{Binding CollViewSource.View, IsAsync=True}" 
                  Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type views:MainWindow}}}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Adm No." Binding="{Binding StudentID}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Name" Binding="{Binding NameOfStudent}" Width="200" IsReadOnly="True"/>
                <DataGridTextColumn Header="Gender" Binding="{Binding Gender}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Class" Binding="{Binding NameOfClass}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Previous Balance" Binding="{Binding PrevBalance, StringFormat={}{0:N2}}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Date of Birth" Binding="{Binding DateOfBirth, StringFormat={}{0:yyyy}}" Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="Date Admitted" Binding="{Binding DateOfAdmission, StringFormat={}{0: dd - MM - yyyy}}" Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="Guardian" Binding="{Binding NameOfGuardian}" Width="200" IsReadOnly="True"/>
                <DataGridTextColumn Header="Guardian Phone No." Binding="{Binding GuardianPhoneNo}" Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="Address" Binding="{Binding Address}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Postal Code" Binding="{Binding PostalCode}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="City" Binding="{Binding City}" Width="80" IsReadOnly="True"/>
                 <DataGridTextColumn Header="Prev. Institution" Binding="{Binding PrevInstitution}" Width="200" IsReadOnly="True"/>
                <DataGridTextColumn Header="KCPE Score" Binding="{Binding KCPEScore}" Width="200" IsReadOnly="True"/>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
                    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToolTip}">
                                <Grid Margin="4" Background="WhiteSmoke" Visibility="{Binding SPhoto,Converter={StaticResource NullOrNotImageToVisibilityConverter}}">
                                    <Image Width="100" Height="80" Margin="5" Source="{Binding SPhoto, Converter={StaticResource StreamToImageSourceConverter}}"/>

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    <Setter Property="ToolTip" Value="{Binding DataContext, RelativeSource={x:Static RelativeSource.Self}}"/>
                    <Setter Property="Tag" Value="{Binding Tag, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" Tag="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header="View Details" Command="{Binding DisplayStudentDetailCommand}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                <MenuItem Header="Modify Details" IsEnabled="False"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive}" Value="False">
                            <Setter Property="Background" Value="OrangeRed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>                           
            </DataGrid.Resources>
        </DataGrid>
        <TextBlock HorizontalAlignment="Right" Margin="0,51,80,0" Text="Active" VerticalAlignment="Top"/>
        <TextBlock HorizontalAlignment="Right" Margin="0,75,80,0" Text="Inactive" VerticalAlignment="Top"/>

        <Border HorizontalAlignment="Right" Margin="0,51,20,0" BorderThickness="1" Background="White" BorderBrush="Silver" Width="50" Height="15" VerticalAlignment="Top"/>
        <Border HorizontalAlignment="Right" Margin="0,75,20,0" BorderThickness="1" Background="OrangeRed" BorderBrush="Silver" Width="50" Height="15" VerticalAlignment="Top"/>
        <Border Grid.RowSpan="2" Background="#7FF5F5F5" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
            <TextBlock Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Please Wait..." Style="{DynamicResource LargeTitle}"/>
        </Border>
    </Grid>
</UserControl>
