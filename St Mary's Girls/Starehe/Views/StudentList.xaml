<UserControl x:Class="Starehe.Views.StudentList"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:Controls="clr-namespace:Helper.Controls;assembly=Helper"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"       
      mc:Ignorable="d" Background="White"
             xmlns:views ="clr-namespace:Starehe.Views"
      d:DesignHeight="548" d:DesignWidth="984">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Starehe;component/ModelsDataTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="TitleBackgroundBrush" Color="{DynamicResource Title1BackgroundColor}"/>
            <Style x:Key="dt" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <EventSetter Event="ListBoxItem.MouseDoubleClick" Handler="OnDoubleClick" />
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" HorizontalAlignment="Left" Margin="20,20,0,0" Style="{DynamicResource Title}"  Text="Student List" VerticalAlignment="Top"/>
        <TextBox Style="{StaticResource SearchTextBox}" Grid.Row="0"  Name="txtTitle" HorizontalAlignment="Left" Height="23" Margin="230,26,0,0" 
                 Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Delay=10, Mode=OneWayToSource}" VerticalAlignment="Top" Width="454"/>
        <TextBlock Grid.Row="0"  HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" >
                <Hyperlink Command="{Binding RefreshCommand}">Refresh</Hyperlink>
        </TextBlock>
        <DataGrid Name="lbx" AutoGenerateColumns="False" VirtualizingStackPanel.IsVirtualizing="True" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto"
                 Margin="20,0,20,20" 
                  IsReadOnly="True"
                 ItemsSource="{Binding CollViewSource.View, IsAsync=True}"
                  Tag="{Binding}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Adm No." Binding="{Binding StudentID}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Name" Binding="{Binding NameOfStudent}" Width="200" IsReadOnly="True"/>
                <DataGridTextColumn Header="Class" Binding="{Binding NameOfClass}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Date of Birth" Binding="{Binding DateOfBirth, StringFormat={}{0: dd - MM - yyyy}}" Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="Date Admitted" Binding="{Binding DateOfAdmission, StringFormat={}{0: dd - MM - yyyy}}" Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="Guardian" Binding="{Binding NameOfGuardian}" Width="200" IsReadOnly="True"/>
                <DataGridTextColumn Header="Guardian Phone No." Binding="{Binding GuardianPhoneNo}" Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="Address" Binding="{Binding Address}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Postal Code" Binding="{Binding PostalCode}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="City" Binding="{Binding City}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Dormitory" Binding="{Binding NameOfDormitory}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Bed No" Binding="{Binding BedNo}" Width="80" IsReadOnly="True"/>
                <DataGridTextColumn Header="Prev. Institution" Binding="{Binding PrevInstitution}" Width="200" IsReadOnly="True"/>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu IsEnabled="False" Visibility="Collapsed">
                    <MenuItem Header="Set New Class" 
                              CommandParameter="{Binding}"
                              Command="{Binding PlacementTarget.Tag.SetNewClassCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Set Cleared"
                              Command="{Binding PlacementTarget.Tag.SetClearedCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Set Transferred"
                              Command="{Binding PlacementTarget.Tag.SetTransferredCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <Separator/>
                    <MenuItem Header="Show Active Only"
                              Command="{Binding PlacementTarget.Tag.ShowActiveOnlyCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Show Transferred Only"
                              Command="{Binding PlacementTarget.Tag.ShowTransferredOnlyCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Show Cleared Only"
                              Command="{Binding PlacementTarget.Tag.ShowClearedCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Show All"
                              Command="{Binding PlacementTarget.Tag.ShowAllCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <Separator/>
                    <MenuItem Header="Include Transferred"
                              Command="{Binding PlacementTarget.Tag.IncludeTransferredCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Include Cleared"
                              Command="{Binding PlacementTarget.Tag.IncludeClearedCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <Separator/>
                    <MenuItem Header="Export to Excel"
                              Command="{Binding PlacementTarget.Tag.ExportToExcelCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <TextBlock HorizontalAlignment="Right" Margin="0,35,80,0" Text="Active" VerticalAlignment="Top"/>
        <TextBlock HorizontalAlignment="Right" Margin="0,55,80,0" Text="Transferred" VerticalAlignment="Top"/>
        <TextBlock HorizontalAlignment="Right" Margin="0,75,80,0" Text="Cleared" VerticalAlignment="Top"/>

        <Border HorizontalAlignment="Right" Margin="0,35,20,0" BorderThickness="1" Background="White" BorderBrush="Silver" Width="50" Height="15" VerticalAlignment="Top"/>
        <Border HorizontalAlignment="Right" Margin="0,55,20,0" BorderThickness="1" Background="Aqua" BorderBrush="Silver" Width="50" Height="15" VerticalAlignment="Top"/>
        <Border HorizontalAlignment="Right" Margin="0,75,20,0" BorderThickness="1" Background="OrangeRed" BorderBrush="Silver" Width="50" Height="15" VerticalAlignment="Top"/>
    </Grid>
</UserControl>
